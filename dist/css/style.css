@charset "UTF-8";
/*css 註解*/
@import url("https://fonts.googleapis.com/css2?family=Oxygen+Mono&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@100..900&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: #f5f6fa;
  font-family: "Oxygen Mono", "Noto Sans TC", sans-serif;
}

img {
  width: 100%;
  display: block;
}

ul {
  list-style: none;
  padding-left: 0;
}

a {
  text-decoration: none;
  display: inline-block;
  width: 100%;
}
a span.update {
  color: #f3969a;
}

.main {
  padding: 25px;
}

.section-padding {
  padding: 1rem;
}

.section-border-radius {
  border-radius: 10px;
}

.section-header {
  margin-bottom: 25px;
  position: relative;
  padding-left: 18px;
  letter-spacing: 0.2em;
  font-weight: 700;
}
.section-header i {
  position: absolute;
  font-size: 0.5em;
  color: #f3969a;
}
.section-header i.fa-quote-left {
  left: 0;
}
.section-header i.fa-quote-right {
  bottom: 0;
}

.clear-float {
  clear: both;
}

textarea {
  width: 100%;
  resize: none;
}
textarea.textarea-sm {
  height: 4em;
}
textarea.textarea-md {
  height: 6em;
}
textarea.textarea-lg {
  height: 8em;
}

.my-2r {
  margin: 2rem 0;
}

.upload-label {
  cursor: pointer;
}

.breadcrumb-item {
  color: #bee1d8;
}

.w-10 {
  width: 10% !important;
}

.w-15 {
  width: 15% !important;
}

.w-30 {
  width: 30% !important;
}

.w-33 {
  width: 33% !important;
}

.w-35 {
  width: 35% !important;
}

.w-40 {
  width: 40% !important;
}

.w-60 {
  width: 60% !important;
}

.align_center {
  align-content: center;
}

.cursor_not-allowed {
  cursor: not-allowed !important;
}

.cursor_default {
  cursor: default !important;
}

.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content {
  font-family: "Font Awesome 5 Free";
}

.btn.rounded-circle.btn-sm.car_icon {
  width: 32px;
  height: 32px;
  padding: 0;
}
.btn.rounded-circle.remittance_voucher {
  width: 32px;
  height: 32px;
  padding: 0;
}
.btn.rounded-circle.remittance_voucher i {
  font-size: 1.3rem;
  line-height: 1.3;
}
.btn.rounded-circle.wide_icon {
  width: 32px;
  height: 32px;
  padding: 0;
}
.btn.rounded-circle.wide_icon i {
  font-size: 1.3rem;
  line-height: 1.3;
}

a.btn.oneWord {
  width: 2rem;
}
a.btn.twoWord {
  width: 4.5rem;
}
a.btn.noOutline {
  width: 29px;
  height: 29px;
  padding: 0;
  border: none;
  text-align: center;
}
a.btn.noOutline i {
  vertical-align: middle;
  font-size: 1.8rem;
}

.goto_somewhere {
  position: relative;
}
.goto_somewhere:hover .fa-arrow-right {
  transform: translateX(0px);
  animation-name: gotoSomewhere;
  animation-duration: 0.6s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
.goto_somewhere .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: #f18bba;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
  position: absolute;
  z-index: 1001;
  opacity: 0.8;
}
.goto_somewhere .tooltiptext.tooltip-right {
  top: 2px;
  left: 115%;
}
.goto_somewhere .tooltiptext.tooltip-right::after {
  content: "";
  position: absolute;
  top: 50%;
  right: 100%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent #f18bba transparent transparent;
}
.goto_somewhere .tooltiptext.tooltip-top {
  bottom: 125%;
  left: -25px;
}
.goto_somewhere .tooltiptext.tooltip-top::after {
  content: "";
  position: absolute;
  top: 115%;
  right: 45%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #f18bba transparent transparent transparent;
}
.goto_somewhere .tooltiptext.tooltip-top.lone {
  left: -8px;
}
.goto_somewhere:hover .tooltiptext {
  visibility: visible;
}
.goto_somewhere.show:hover .tooltiptext {
  visibility: hidden;
}

@keyframes gotoSomewhere {
  0% {
    transform: translateX(0px);
  }
  25% {
    transform: translateX(2px);
  }
  50% {
    transform: translateX(0px);
  }
  100% {
    transform: translateX(-2px);
  }
}
.btnThrottle {
  animation: throttle 2s step-end forwards;
}

.btnThrottle:active {
  animation: none;
}

@keyframes throttle {
  from {
    pointer-events: none;
  }
  to {
    pointer-events: all;
  }
}
.form-check.form-switch {
  padding-left: 0em;
}
.form-check.form-switch .form-check-input {
  margin-left: 0;
  float: none;
}

.form-select option {
  color: #333;
}
.form-select option:disabled {
  color: #888;
}
.form-select option:hover {
  background-color: #2b4e55;
}

textarea.resize-none {
  resize: none;
}
textarea.h_60 {
  height: 60px;
}
textarea.h_100 {
  height: 100px;
}
textarea.h_110 {
  height: 110px;
}
textarea.h_150 {
  height: 150px;
}
textarea.h_200 {
  height: 200px;
}

.requiredMark {
  color: #e83e8c;
}

label.upload-label:hover {
  color: #e83e8c;
}

input:-moz-read-only {
  background-color: #f7f7f9;
}

input:read-only {
  background-color: #f7f7f9;
}

.dataTable thead,
.dataTable tfoot {
  background-color: #e4f3ef;
}
.dataTable thead .dt-column-title,
.dataTable tfoot .dt-column-title {
  color: #5a5a5a;
}
.dataTable thead tr th span.dt-column-order::before {
  margin-bottom: 2px;
}

table tr.border_top_5 {
  border-top: 3px solid black;
}

.version_number {
  font-size: 0.8rem;
  font-weight: 700;
  color: #ced4da;
}

nav .nav-tabs .nav-link {
  color: #5a5a5a;
  letter-spacing: 0.1em;
}
nav .nav-tabs .nav-link.active {
  font-weight: 700;
  color: #22523f;
  font-size: 1.05em;
}

/* ::::::::::::::::::::::::::::: 側邊攔 */
.main .nav-box {
  position: fixed;
  z-index: 999;
  top: 0;
  left: 0;
  min-height: 100vh;
  width: 70px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 10px 0;
  background-color: #519864;
  transition: transform 0.2s linear;
}
.main .nav-box .navbar-logo,
.main .nav-box .navbar-user {
  max-width: 40px;
  display: block;
  margin: 0 auto;
}
.main .nav-box .navbar-logo {
  margin-bottom: 10px;
}
.main .nav-box .navbar-user {
  margin-top: 10px;
}
.main .nav-box .navbar-logo img,
.main .nav-box .navbar-user img {
  border-radius: 50px;
}
.main .nav-box .bottom {
  padding-bottom: 50px;
}
.main .burger-menu {
  position: absolute;
  color: #fff;
  font-size: 18px;
  left: 100%;
  background-color: #f3969a;
  height: 35px;
  width: 40px;
  text-align: center;
  line-height: 35px;
  border-radius: 0 5px 5px 0;
  display: none;
}
.main .navigation .link {
  padding: 10px 8px;
  text-align: center;
  font-size: 16px;
  color: #333;
  position: relative;
  /* nav -Tooltip text */
}
.main .navigation .link:hover, .main .navigation .link.active {
  color: #fff;
}
.main .navigation .link::before, .main .navigation .link.active::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0px;
  border-radius: 0 5px 5px 0;
  transition: width 0.2s linear;
}
.main .navigation .link:hover::before, .main .navigation .link.active::before {
  width: 5px;
}
.main .navigation .link.active::before {
  background-color: #f3969a;
}
.main .navigation .link:hover::before {
  background-color: #78c2ad;
}
.main .navigation .link .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: #ff7851;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
  position: absolute;
  z-index: 1001;
  opacity: 0.9;
}
.main .navigation .link .tooltiptext.tooltip-right {
  top: 0px;
  left: 80%;
}
.main .navigation .link .tooltiptext.tooltip-right::after {
  content: "";
  position: absolute;
  top: 50%;
  right: 100%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent #ff7851 transparent transparent;
}
.main .navigation .link:hover .tooltiptext {
  visibility: visible;
}
.main .navigation .link.show:hover .tooltiptext {
  visibility: hidden;
}
.main .navigation .link:hover .icon-rotate {
  transform: rotate(380deg);
  transition: transform 2.5s linear;
}
.main .navigation .dropdown-toggle::after {
  display: none;
}

/* ::::::::::::::::::::::::::::: Content */
.content {
  padding-left: 70px;
}

.container {
  padding: 0 15px;
  max-width: 1200px;
  margin: 0 auto;
}

/* ::::::::::::::::::::::::::::: breadcrumb */
.breadcrumb-box {
  background-color: #fff;
}
.breadcrumb-box .breadcrumb {
  margin: 0;
}

/* ::::::::::::::::::::::::::::: lightBox */
.modal-dialog .modal-header .modal-title {
  font-weight: 700;
  letter-spacing: 0.2em;
}
.modal-dialog .modal-body .container-fluid > .row {
  border-radius: 10px;
  border: 1px dotted #c9e7de;
}
@media (max-width: 992px) {
  .modal-dialog .modal-body .container-fluid > .row.multiple {
    border: none;
  }
  .modal-dialog .modal-body .container-fluid > .row.multiple .inlineLabel {
    border: 1px dotted #c9e7de;
  }
  .modal-dialog .modal-body .container-fluid > .row.multiple .lightBoxItems {
    border: 1px dotted #c9e7de;
    border-radius: 0 0 10px 10px;
    margin-bottom: 0.25rem;
  }
}
.modal-dialog .modal-body .readOnly {
  color: #959aa9;
}
.modal-dialog .lightBoxLabel {
  font-weight: 700;
  letter-spacing: 0.2em;
  background-color: #ddf5eb;
  border-radius: 10px 0 0 10px;
  position: relative;
}
.modal-dialog .lightBoxLabel.inlineLabel {
  border-radius: 0;
}
@media (max-width: 992px) {
  .modal-dialog .lightBoxLabel.inlineLabel {
    border-radius: 10px 10px 0 0;
  }
}
.modal-dialog .lightBoxLabel.textRequiredMark::before {
  content: "*";
  position: absolute;
  top: 8px;
  left: 8px;
  color: #e83e8c;
  font-size: 0.8em;
}
.modal-dialog .lightBoxLabel.pinkBG {
  background-color: #fad5d7;
}
.modal-dialog .lightBoxLabel.grayBG {
  background-color: #e3e3e3;
}
@media (max-width: 992px) {
  .modal-dialog .lightBoxLabel {
    border-radius: 10px 10px 0 0;
  }
}

/* ::::::::::::::::::::::::::::: 建設中 */
.underConstructionPage .tabs img {
  margin: 0 auto;
  padding: 0;
  width: 202px;
  animation: move 0.8s linear infinite;
}
@keyframes move {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(-2deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(2deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* ::::::::::::::::::::::::::::: Footer */
.footer {
  background-color: #fff;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.footer .links {
  display: flex;
  margin-bottom: 25px;
}
.footer .links li:not(:first-child), .footer .links li:not(:last-child) {
  margin: 0 10px;
}
.footer .links a {
  padding: 0.3rem 0.8rem;
  min-width: 110px;
  text-align: center;
  color: #78c2ad;
}
.footer .links a:hover {
  transition: all 0.2s linear;
  color: #519864;
}
.footer .links .copyright {
  font-size: 13.5px;
  margin-bottom: 8px;
  color: #222;
}
.footer .links .copyright span {
  color: lightsalmon;
  font-weight: 600;
  font-size: 14.5px;
}

/* ==========右下TOP========== */
.top_button {
  position: fixed;
  right: 50px;
  bottom: 100px;
  width: 5vw;
  min-width: 60px;
  height: 5vw;
  min-height: 60px;
  opacity: 0;
  z-index: 30;
  transition: 0.3s ease;
  /* 添加透明度變化的動畫效果 */
  cursor: pointer;
}

.top_button img {
  display: block;
  margin: 0 auto;
  width: 65%;
  transform: translateY(3%);
}

.top_button:hover {
  opacity: 1;
}

/* 定義透明度變化的動畫效果 */
@keyframes fadeAnimation {
  0% {
    transform: rotate(0deg);
    opacity: 0.8;
  }
  25% {
    transform: rotate(-2deg);
    opacity: 1;
  }
  50% {
    transform: rotate(0deg);
    opacity: 1;
  }
  75% {
    transform: rotate(2deg);
    opacity: 1;
  }
  100% {
    transform: rotate(0deg);
    opacity: 0.8;
  }
}
/* 當畫面不在網頁最頂端時，套用透明度變化的動畫 */
.top_button.scroll-animation {
  animation: fadeAnimation 1s linear infinite;
}

@media screen and (max-width: 700px) {
  .main .nav-box {
    transform: translateX(-100%);
  }
  .main .nav-box:hover {
    transform: translateX(0);
  }
  .main .nav-box .burger-menu {
    display: block;
  }
  .content {
    padding-left: 0px;
  }
}
@page {
  size: A4 portrait;
  margin: 0;
  margin-top: 20px;
}
@media print {
  .content {
    padding-left: 0;
  }
  .no_print {
    display: none !important;
  }
  .yes_print {
    display: block !important;
  }
  .print_template {
    display: block;
    width: 100%;
  }
  .print_table {
    page-break-inside: avoid;
  }
  .break-inside-avoid {
    -moz-column-break-inside: avoid;
    break-inside: avoid;
    /* page-break-inside: avoid; */
  }
  .break-before {
    -moz-column-break-before: page;
    break-before: page;
  }
  .break-after {
    -moz-column-break-after: page;
    break-after: page;
  }
  .pe_0 {
    padding-right: 0;
  }
}
/* ::::::::::::::::::::::::::::: 快速窗口 */
.quicklinks .list-quicklinks {
  display: flex;
  justify-content: space-between;
}
.quicklinks .list-quicklinks .quicklink {
  background-color: #fff;
  width: 23%;
  border-radius: 10px;
  text-align: center;
  padding: 2rem 1rem;
  transition: box-shadow 0.2s ease-in;
}
.quicklinks .list-quicklinks .quicklink .icon {
  height: 40px;
  width: 40px;
  display: inline-block;
  text-align: center;
  line-height: 40px;
  border-radius: 50%;
}
.quicklinks .list-quicklinks .quicklink .icon-change i.first {
  transform: translateX(-10px);
}
.quicklinks .list-quicklinks .quicklink .icon-change i.second {
  transform: translateX(-30px);
  opacity: 0;
}
.quicklinks .list-quicklinks .quicklink:hover {
  box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px, rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;
}
.quicklinks .list-quicklinks .quicklink:hover .icon-big i {
  transform: scale(1.75, 1.75);
  transition: transform 0.5s;
}
.quicklinks .list-quicklinks .quicklink:hover .icon-rotate i {
  transform: rotate(720deg);
  transition: transform 3s;
}
.quicklinks .list-quicklinks .quicklink:hover .icon-change i.first {
  animation-name: CarGo;
  /* 套用的 keyframe */
  animation-duration: 2s;
  /* 動畫持續時間 */
  animation-iteration-count: infinite;
  /* 動畫播放次數 */
  animation-timing-function: linear;
  /* 影片加速速率 */
}
.quicklinks .list-quicklinks .quicklink:hover .icon-change i.second {
  animation-name: motoCome;
  /* 套用的 keyframe */
  animation-duration: 2s;
  /* 動畫持續時間 */
  animation-iteration-count: infinite;
  /* 動畫播放次數 */
  animation-timing-function: linear;
  /* 影片加速速率 */
}
@keyframes CarGo {
  0% {
    opacity: 1;
    transform: translateX(0px);
  }
  15% {
    transform: translateX(20px);
  }
  25% {
    opacity: 0.5;
    transform: translateX(25px);
  }
  30% {
    opacity: 0.3;
  }
  45% {
    opacity: 0;
    transform: translateX(30px);
  }
  50% {
    opacity: 0;
    transform: translateX(-50px);
  }
  65% {
    transform: translateX(-40px);
  }
  75% {
    opacity: 0.3;
    transform: translateX(-15px);
  }
  80% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
    transform: translateX(0px);
  }
}
@keyframes motoCome {
  0% {
    opacity: 0;
    transform: translateX(-30px);
  }
  15% {
    transform: translateX(-20px);
  }
  25% {
    opacity: 0.3;
    transform: translateX(0px);
  }
  30% {
    opacity: 0.5;
  }
  45% {
    opacity: 1;
    transform: translateX(10px);
  }
  50% {
    transform: translateX(20px);
  }
  65% {
    transform: translateX(30px);
  }
  75% {
    opacity: 0.5;
  }
  80% {
    opacity: 0.3;
    transform: translateX(40px);
  }
  100% {
    opacity: 0;
    transform: translateX(50px);
  }
}
.quicklinks .list-quicklinks .quicklink .num {
  font-size: 40px;
  margin: 25px 0 5px 0;
  transform: scaleY(1.1);
}
.quicklinks .list-quicklinks .quicklink .desc {
  font-size: 12px;
  color: #7f8488;
  margin-bottom: 35px;
}
.quicklinks .list-quicklinks .quicklink .up {
  color: #1ebe2c;
}
.quicklinks .list-quicklinks .quicklink .down {
  color: #f62421;
}
.quicklinks .list-quicklinks .quicklink .percent {
  display: flex;
  align-items: center;
  justify-content: center;
}
.quicklinks .list-quicklinks .quicklink .percent .value {
  font-size: 12px;
  font-weight: bold;
  margin-left: 5px;
}
.quicklinks .list-quicklinks .a .icon {
  background-color: #e5f3ff;
  color: #0277ed;
}
.quicklinks .list-quicklinks .b .icon {
  background-color: #f4f1ff;
  color: #8964f9;
}
.quicklinks .list-quicklinks .c .icon {
  background-color: #fff9e5;
  color: #f4b20a;
}
.quicklinks .list-quicklinks .d .icon {
  background-color: #ebfaea;
  color: #46bd4c;
}

/* ::::::::::::::::::::::::::::: 特殊廣告 */
.message {
  background-color: #303346;
  position: relative;
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  padding: 2rem 2rem;
  overflow: hidden;
}
.message::before, .message::after {
  content: "";
  position: absolute;
  z-index: 1;
}
.message::before {
  height: 40vw;
  width: 60vw;
  left: -17vw;
  bottom: 10px;
  border-radius: 50%;
  background-color: #519864;
}
.message::after {
  height: 25vw;
  width: 35vw;
  right: -5vw;
  bottom: -22vw;
  border-radius: 50%;
  background-color: #252837;
  box-shadow: -10px -50px 0px 15px rgba(255, 255, 255, 0.2);
}
.message * {
  position: relative;
  z-index: 2;
}
.message .text {
  color: #fff;
  max-width: 80%;
  line-height: 1.6;
  font-weight: 600;
}
.message .btn-discover {
  outline: none;
  border: 1px solid #519864;
  padding: 0.3rem 0.6rem;
  min-width: 110px;
  font-family: "Open Sans", sans-serif;
  border-radius: 5px;
  color: #fff;
  font-weight: bold;
  background-color: #519864;
  cursor: pointer;
  transition: all 0.3s linear;
}
.message .btn-discover:hover {
  background-color: transparent;
}

/* ::::::::::::::::::::::::::::: 近期活動 & 日曆 */
/* ::::::::::::::::::::::::::::: Apps + Features */
.push-features {
  display: flex;
  justify-content: space-between;
}
.push-features .expiresSoon {
  width: 100%;
}
.push-features .list-apps {
  background-color: #fff;
}
.push-features .list-apps .aboutToExpire {
  border-radius: 8px;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #f2f6f9;
  color: #686f7d;
  transition: all 0.3s ease-out;
}
.push-features .list-apps .aboutToExpire:hover {
  background-color: #fad5d7;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
}
.push-features .list-apps .aboutToExpire:hover .btn-view {
  color: #333;
  font-size: 0.9rem;
}
.push-features .list-apps .aboutToExpire:not(:first-child) {
  margin-top: 1rem;
}
.push-features .list-apps .aboutToExpire .desc {
  width: 30%;
  display: flex;
  align-items: center;
}
.push-features .list-apps .aboutToExpire .desc .icon {
  height: 35px;
  width: 35px;
  display: inline-block;
  text-align: center;
  line-height: 35px;
  background-color: #fff;
  border-radius: 5px;
}
.push-features .list-apps .aboutToExpire .desc .name {
  margin-left: 1em;
  font-size: 1.2em;
}
.push-features .list-apps .aboutToExpire .desc .fa-users-viewfinder {
  color: #ffae97;
}
.push-features .list-apps .aboutToExpire .desc .fa-square-parking {
  color: #6cc3d5;
}
.push-features .list-apps .aboutToExpire .desc .fa-seedling {
  color: #78c2ad;
}
.push-features .list-apps .aboutToExpire .btn-cont {
  text-align: right;
}
.push-features .list-apps .aboutToExpire .btn-view {
  font-size: 0.8rem;
  border: 1px solid #888;
  display: inline;
  padding: 0.2rem 0.6rem;
  margin-right: auto;
  border-radius: 3px;
  color: #888;
}
.push-features .features {
  width: 34%;
  display: flex;
  flex-direction: column;
}
.push-features .features .feature {
  background-color: #f7f7f7;
  flex-grow: 1;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
  overflow: hidden;
  position: relative;
  color: #46284f;
}
.push-features .features .feature > * {
  position: relative;
  z-index: 2;
}
.push-features .features .price-container {
  display: flex;
  align-items: flex-end;
  margin-bottom: 2rem;
}
.push-features .features .price-container h2 {
  font-size: 3rem;
}
.push-features .features .text {
  width: 75%;
  margin-top: 1rem;
  font-size: 14px;
}
.push-features .features .img {
  width: 180px;
  position: absolute;
  right: -3%;
  bottom: -3%;
  z-index: 1;
}

/*------------------------*/
@media screen and (max-width: 960px) {
  .quicklinks .list-quicklinks,
  .events-calendar {
    flex-wrap: wrap;
  }
  .quicklinks .list-quicklinks .quicklink {
    width: 48%;
  }
  .quicklinks .list-quicklinks .quicklink:nth-child(1),
  .quicklinks .list-quicklinks .quicklink:nth-child(2) {
    margin-bottom: 20px;
  }
  .events-calendar .events,
  .events-calendar .calendar {
    width: 100%;
  }
  .events-calendar .calendar {
    margin-top: 2rem;
  }
}
@media screen and (max-width: 560px) {
  .main {
    padding-left: 5px;
    padding-right: 5px;
  }
  .quicklinks .list-quicklinks,
  .message,
  .events-calendar .events .list-events,
  .events-calendar {
    display: block;
  }
  .quicklinks .list-quicklinks .quicklink,
  .events-calendar .events .list-events .event {
    width: 100%;
  }
  .quicklinks .list-quicklinks .quicklink:not(:last-child),
  .events-calendar .events .list-events .event:not(:last-child) {
    margin-bottom: 15px;
  }
  .message {
    text-align: center;
  }
  .message .text {
    max-width: 100%;
    margin-bottom: 20px;
  }
}
.tabs-box .tabs {
  background-color: #fff;
}

.salaryRadio {
  border: 1px dashed;
  border-radius: 8px;
}
.salaryRadio .salaryLabel {
  display: none;
}
.salaryRadio .salaryLabel.choose {
  display: flex;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
